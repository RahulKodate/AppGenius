package ui.Hospital;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Community;
import model.Hospital;
import model.HospitalDirectory;

/**
 *
 * @author rahulkodate
 */
public class CreateHospitalJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateHospitalJPanel
     */
    private JPanel userProcessContainer;
    private HospitalDirectory hospitalDirectory;

    public CreateHospitalJPanel(JPanel userProcessContainer, HospitalDirectory hospitalDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.hospitalDirectory = hospitalDirectory;
        isDigit("");
        isLetter("");
        setSize(1000, 610);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCreatePerson = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtCommunity = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        btnCreateHospital = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 153, 255));

        lblCreatePerson.setFont(new java.awt.Font("Operator Mono", 1, 24)); // NOI18N
        lblCreatePerson.setForeground(new java.awt.Color(255, 255, 255));
        lblCreatePerson.setText("Create Hospital Profile");

        btnBack.setBackground(new java.awt.Color(51, 102, 255));
        btnBack.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<- Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setText("Name");

        lblAddress.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(255, 255, 255));
        lblAddress.setText("Address");

        lblCommunity.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        lblCommunity.setForeground(new java.awt.Color(255, 255, 255));
        lblCommunity.setText("Community");

        txtName.setFont(new java.awt.Font("Operator Mono", 0, 13)); // NOI18N

        txtCommunity.setFont(new java.awt.Font("Operator Mono", 0, 13)); // NOI18N

        txtAddress.setFont(new java.awt.Font("Operator Mono", 0, 13)); // NOI18N

        btnCreateHospital.setBackground(new java.awt.Color(51, 102, 255));
        btnCreateHospital.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnCreateHospital.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateHospital.setText("Create Hospital");
        btnCreateHospital.setToolTipText("");
        btnCreateHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateHospitalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCommunity, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblAddress, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(txtName)
                    .addComponent(txtCommunity))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(btnBack)
                        .addGap(210, 210, 210)
                        .addComponent(lblCreatePerson))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(415, 415, 415)
                        .addComponent(btnCreateHospital)))
                .addContainerGap(332, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatePerson)
                    .addComponent(btnBack))
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunity)
                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(btnCreateHospital)
                .addGap(194, 194, 194))
        );
    }// </editor-fold>//GEN-END:initComponents

  private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
  }//GEN-LAST:event_btnBackActionPerformed

  private void btnCreateHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateHospitalActionPerformed
        // TODO add your handling code here:
        if (checkIsEmpty() == true) {
            Hospital hospital = hospitalDirectory.AddHospital();
            Community community = new Community();
            hospital.setName(txtName.getText());
            hospital.setAddress(txtAddress.getText());
            community.setCommunityName(txtCommunity.getText());
            hospital.setCommunity(community);

            JOptionPane.showMessageDialog(this, "Successfully added a new hospital!", "Update",
                    JOptionPane.INFORMATION_MESSAGE);
            clearInput();
        } else {
            JOptionPane.showMessageDialog(this, "Please enter valid values in respective fields!",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
  }//GEN-LAST:event_btnCreateHospitalActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateHospital;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCreatePerson;
    private javax.swing.JLabel lblName;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    private Boolean checkIsEmpty() {
        if (txtName.getText().
                length() == 0 || txtAddress.getText().
                        length() == 0 || txtCommunity.getText().
                        length() == 0) {
            return false;
        } else if ((!isLetter(txtName.getText()))
                || (!isLetter(txtAddress.getText())) || (!isLetter(txtCommunity.getText()))) {
            return false;
        }
        return true;
    }

    private void clearInput() {
        txtName.setText("");
        txtAddress.setText("");
        txtCommunity.setText("");
    }

    private boolean isDigit(String s) {
        char[] chArr = s.toCharArray();
        for (char c : chArr) {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }

    private boolean isLetter(String s) {
        char[] chArr = s.toCharArray();
        for (char c : chArr) {
            if (!Character.isLetter(c)) {
                return false;
            }
        }
        return true;
    }
}
