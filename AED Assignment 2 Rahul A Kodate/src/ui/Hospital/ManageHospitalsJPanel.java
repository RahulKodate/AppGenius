package ui.Hospital;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Hospital;
import model.HospitalDirectory;

/**
 *
 * @author rahulkodate
 */
public class ManageHospitalsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalDirectory
     */
    private JPanel userProcessContainer;
    private HospitalDirectory hospitalDirectory;

    public ManageHospitalsJPanel(JPanel userProcessContainer,
            HospitalDirectory hospitalDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.hospitalDirectory = hospitalDirectory;
        isDigit("");
        isLetter("");
        ArrayList<Hospital> hospitals = hospitalDirectory.getHospitalDirectory();
        populateHospitalsTable(hospitals);
        setSize(1000, 610);

    }

    private void populateHospitalsTable(ArrayList<Hospital> hospitalList) {
        DefaultTableModel model = (DefaultTableModel) tblHospital.getModel();
        model.setRowCount(0);

        if (hospitalList.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "No hospitals found! Please add a hospital!", "Warning",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        for (Hospital p : hospitalList) {
            Object[] row = new Object[3];
            row[0] = p;
            row[1] = p.getAddress();
            row[2] = p.getCommunity().
                    getCommunityName();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPersonMgmt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHospital = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDeleteHospital = new javax.swing.JButton();
        btnViewHospital = new javax.swing.JButton();
        btnCreateHospital = new javax.swing.JButton();
        btnUpdateHospital = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        txtSearchHospital = new javax.swing.JTextField();
        btnSearchHospital = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 153, 255));

        lblPersonMgmt.setFont(new java.awt.Font("Operator Mono", 1, 24)); // NOI18N
        lblPersonMgmt.setForeground(new java.awt.Color(255, 255, 255));
        lblPersonMgmt.setText("Hospital Management");

        tblHospital.setFont(new java.awt.Font("Operator Mono", 0, 12)); // NOI18N
        tblHospital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "Community"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHospital);

        btnRefresh.setBackground(new java.awt.Color(51, 102, 255));
        btnRefresh.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh Table");
        btnRefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(51, 102, 255));
        btnBack.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<- Back");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDeleteHospital.setBackground(new java.awt.Color(51, 102, 255));
        btnDeleteHospital.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnDeleteHospital.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteHospital.setText("Delete Hospital");
        btnDeleteHospital.setToolTipText("");
        btnDeleteHospital.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteHospitalActionPerformed(evt);
            }
        });

        btnViewHospital.setBackground(new java.awt.Color(51, 102, 255));
        btnViewHospital.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnViewHospital.setForeground(new java.awt.Color(255, 255, 255));
        btnViewHospital.setText("View Hospital");
        btnViewHospital.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHospitalActionPerformed(evt);
            }
        });

        btnCreateHospital.setBackground(new java.awt.Color(51, 102, 255));
        btnCreateHospital.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnCreateHospital.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateHospital.setText("Create Hospital");
        btnCreateHospital.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreateHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateHospitalActionPerformed(evt);
            }
        });

        btnUpdateHospital.setBackground(new java.awt.Color(51, 102, 255));
        btnUpdateHospital.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnUpdateHospital.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateHospital.setText("Update Hospital");
        btnUpdateHospital.setToolTipText("");
        btnUpdateHospital.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateHospitalActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        txtSearchHospital.setFont(new java.awt.Font("Operator Mono", 0, 13)); // NOI18N

        btnSearchHospital.setBackground(new java.awt.Color(51, 102, 255));
        btnSearchHospital.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnSearchHospital.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchHospital.setText("Search Hospital by Name");
        btnSearchHospital.setToolTipText("");
        btnSearchHospital.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearchHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchHospitalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(btnRefresh))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(209, 209, 209)
                        .addComponent(lblPersonMgmt))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(92, 92, 92)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnDeleteHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnUpdateHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnViewHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCreateHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtSearchHospital, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                                .addComponent(btnSearchHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(46, 46, 46))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonMgmt)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(btnCreateHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnViewHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdateHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator2)))
                        .addGap(97, 97, 97))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(txtSearchHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchHospital)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

  private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
  }//GEN-LAST:event_btnBackActionPerformed

  private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        txtSearchHospital.setText("");
        populateHospitalsTable(hospitalDirectory.getHospitalDirectory());
  }//GEN-LAST:event_btnRefreshActionPerformed

  private void btnDeleteHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteHospitalActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblHospital.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table above!",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Hospital p = (Hospital) tblHospital.getValueAt(selectedRow, 0);
        int confirmation = JOptionPane.showConfirmDialog(this,
                "Are you sure want to remove this entry?",
                "Warning", JOptionPane.YES_NO_OPTION);
        if (confirmation == 0) {
            hospitalDirectory.deleteHospital(p);
            populateHospitalsTable(hospitalDirectory.getHospitalDirectory());
        }
  }//GEN-LAST:event_btnDeleteHospitalActionPerformed

  private void btnCreateHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateHospitalActionPerformed
        // TODO add your handling code here:
        CreateHospitalJPanel cp = new CreateHospitalJPanel(userProcessContainer,
                hospitalDirectory);
        userProcessContainer.add("CreateHospitalJPanel", cp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
  }//GEN-LAST:event_btnCreateHospitalActionPerformed

  private void btnViewHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHospitalActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblHospital.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this,
                    "Please select a row from table above!",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        Hospital hospital = (Hospital) tblHospital.getValueAt(selectedRow, 0);

        ViewHospitalJPanel vp = new ViewHospitalJPanel(userProcessContainer, hospital,
                Boolean.FALSE);
        userProcessContainer.add("ViewHospitalJPanel", vp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
  }//GEN-LAST:event_btnViewHospitalActionPerformed

  private void btnUpdateHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateHospitalActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblHospital.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table above!",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        Hospital hospital = (Hospital) tblHospital.getValueAt(selectedRow, 0);

        ViewHospitalJPanel up = new ViewHospitalJPanel(userProcessContainer, hospital, Boolean.TRUE);
        userProcessContainer.add("UpdateHospitalJPanel", up);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
  }//GEN-LAST:event_btnUpdateHospitalActionPerformed

  private void btnSearchHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchHospitalActionPerformed
        // TODO add your handling code here:
        String searchStr = txtSearchHospital.getText();
        if (searchStr.length() == 0 || (!isLetter(searchStr))) {
            JOptionPane.showMessageDialog(this, "Please enter a valid name to search!",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        ArrayList<Hospital> searchHospitals;
        searchHospitals = hospitalDirectory.searchHospital(searchStr);
        populateHospitalsTable(searchHospitals);
  }//GEN-LAST:event_btnSearchHospitalActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateHospital;
    private javax.swing.JButton btnDeleteHospital;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearchHospital;
    private javax.swing.JButton btnUpdateHospital;
    private javax.swing.JButton btnViewHospital;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblPersonMgmt;
    private javax.swing.JTable tblHospital;
    private javax.swing.JTextField txtSearchHospital;
    // End of variables declaration//GEN-END:variables

    private boolean isDigit(String s) {
        char[] chArr = s.toCharArray();
        for (char c : chArr) {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }

    private boolean isLetter(String s) {
        char[] chArr = s.toCharArray();
        for (char c : chArr) {
            if (!Character.isLetter(c)) {
                return false;
            }
        }
        return true;
    }
}
