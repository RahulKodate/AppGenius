package ui.Community;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.CityDirectory;
import model.Community;
import model.CommunityDirectory;
import model.HouseDirectory;

/**
 *
 * @author rahulkodate
 */
public class ManageCommunityJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommunityDirectory
     */
    private JPanel userProcessContainer;
    private CommunityDirectory communityDirectory;
    private HouseDirectory houseDirectory;
    private CityDirectory cityDirectory;

    public ManageCommunityJPanel(JPanel userProcessContainer,
            CommunityDirectory communityDirectory, HouseDirectory houseDirectory, CityDirectory cityDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.communityDirectory = communityDirectory;
        this.houseDirectory = houseDirectory;
        this.cityDirectory = cityDirectory;

        isDigit("");
        isLetter("");
        ArrayList<Community> communities = communityDirectory.getCommunityDirectory();
        populateCommunityTable(communities);
        setSize(1000, 610);
    }

    private void populateCommunityTable(ArrayList<Community> communityList) {
        DefaultTableModel model = (DefaultTableModel) tblCommunity.getModel();
        model.setRowCount(0);

        if (communityList.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "No communitys found! Please add a community!", "Warning",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        for (Community p : communityList) {
            Object[] row = new Object[3];
            row[0] = p;
            row[1] = p.getHouse().getName();
            row[2] = p.getCity().getCityName();
//            row[3] = p.getHospital().getName();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDoctorMgmt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCommunity = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDeleteCommunity = new javax.swing.JButton();
        btnViewCommunity = new javax.swing.JButton();
        btnCreateCommunity = new javax.swing.JButton();
        btnUpdateCommunity = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        txtSearchCommunity = new javax.swing.JTextField();
        btnSearchCommunity = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 153, 255));

        lblDoctorMgmt.setFont(new java.awt.Font("Operator Mono", 1, 24)); // NOI18N
        lblDoctorMgmt.setForeground(new java.awt.Color(255, 255, 255));
        lblDoctorMgmt.setText("Community Management");

        tblCommunity.setFont(new java.awt.Font("Operator Mono", 0, 12)); // NOI18N
        tblCommunity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "House", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCommunity);

        btnRefresh.setBackground(new java.awt.Color(51, 102, 255));
        btnRefresh.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh Table");
        btnRefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(51, 102, 255));
        btnBack.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<- Back");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDeleteCommunity.setBackground(new java.awt.Color(51, 102, 255));
        btnDeleteCommunity.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnDeleteCommunity.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteCommunity.setText("Delete Community");
        btnDeleteCommunity.setToolTipText("");
        btnDeleteCommunity.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCommunityActionPerformed(evt);
            }
        });

        btnViewCommunity.setBackground(new java.awt.Color(51, 102, 255));
        btnViewCommunity.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnViewCommunity.setForeground(new java.awt.Color(255, 255, 255));
        btnViewCommunity.setText("View Community");
        btnViewCommunity.setToolTipText("");
        btnViewCommunity.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCommunityActionPerformed(evt);
            }
        });

        btnCreateCommunity.setBackground(new java.awt.Color(51, 102, 255));
        btnCreateCommunity.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnCreateCommunity.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateCommunity.setText("Create Community");
        btnCreateCommunity.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreateCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateCommunityActionPerformed(evt);
            }
        });

        btnUpdateCommunity.setBackground(new java.awt.Color(51, 102, 255));
        btnUpdateCommunity.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnUpdateCommunity.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateCommunity.setText("Update Community");
        btnUpdateCommunity.setToolTipText("");
        btnUpdateCommunity.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCommunityActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        txtSearchCommunity.setFont(new java.awt.Font("Operator Mono", 0, 13)); // NOI18N

        btnSearchCommunity.setBackground(new java.awt.Color(51, 102, 255));
        btnSearchCommunity.setFont(new java.awt.Font("Operator Mono", 1, 13)); // NOI18N
        btnSearchCommunity.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchCommunity.setText("Search Community by Name");
        btnSearchCommunity.setToolTipText("");
        btnSearchCommunity.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearchCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCommunityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(btnRefresh))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(209, 209, 209)
                        .addComponent(lblDoctorMgmt))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(92, 92, 92)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnDeleteCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnUpdateCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnViewCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCreateCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtSearchCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                                .addComponent(btnSearchCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(46, 46, 46))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorMgmt)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(btnCreateCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnViewCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdateCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator2)))
                        .addGap(97, 97, 97))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(txtSearchCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchCommunity)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

  private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
  }//GEN-LAST:event_btnBackActionPerformed

  private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        txtSearchCommunity.setText("");
        populateCommunityTable(communityDirectory.getCommunityDirectory());
  }//GEN-LAST:event_btnRefreshActionPerformed

  private void btnDeleteCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCommunityActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCommunity.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table above!",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Community p = (Community) tblCommunity.getValueAt(selectedRow, 0);
        int confirmation = JOptionPane.showConfirmDialog(this,
                "Are you sure want to remove this entry?",
                "Warning", JOptionPane.YES_NO_OPTION);
        if (confirmation == 0) {
            communityDirectory.deleteCommunity(p);
            populateCommunityTable(communityDirectory.getCommunityDirectory());
        }
  }//GEN-LAST:event_btnDeleteCommunityActionPerformed

  private void btnCreateCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateCommunityActionPerformed
        // TODO add your handling code here:
        CreateCommunityJPanel cp = new CreateCommunityJPanel(userProcessContainer,
                communityDirectory, houseDirectory, cityDirectory);
        userProcessContainer.add("CreateCommunityJPanel", cp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
  }//GEN-LAST:event_btnCreateCommunityActionPerformed

  private void btnViewCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCommunityActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCommunity.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this,
                    "Please select a row from table above!",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        Community community = (Community) tblCommunity.getValueAt(selectedRow, 0);

        ViewCommunityJPanel vp = new ViewCommunityJPanel(userProcessContainer, community,
                Boolean.FALSE);
        userProcessContainer.add("ViewCommunityJPanel", vp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
  }//GEN-LAST:event_btnViewCommunityActionPerformed

  private void btnUpdateCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCommunityActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCommunity.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table above!",
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        Community community = (Community) tblCommunity.getValueAt(selectedRow, 0);

        ViewCommunityJPanel up = new ViewCommunityJPanel(userProcessContainer, community, Boolean.TRUE);
        userProcessContainer.add("UpdateCommunityJPanel", up);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
  }//GEN-LAST:event_btnUpdateCommunityActionPerformed

  private void btnSearchCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCommunityActionPerformed
        // TODO add your handling code here:
        String searchStr = txtSearchCommunity.getText();
        if (searchStr.length() == 0 || (!isLetter(searchStr))) {
            JOptionPane.showMessageDialog(this, "Please enter a valid name to search!",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        ArrayList<Community> searchCommunitys;
        searchCommunitys = communityDirectory.searchCommunity(searchStr);
        populateCommunityTable(searchCommunitys);
  }//GEN-LAST:event_btnSearchCommunityActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateCommunity;
    private javax.swing.JButton btnDeleteCommunity;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearchCommunity;
    private javax.swing.JButton btnUpdateCommunity;
    private javax.swing.JButton btnViewCommunity;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblDoctorMgmt;
    private javax.swing.JTable tblCommunity;
    private javax.swing.JTextField txtSearchCommunity;
    // End of variables declaration//GEN-END:variables

    private boolean isDigit(String s) {
        char[] chArr = s.toCharArray();
        for (char c : chArr) {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }

    private boolean isLetter(String s) {
        char[] chArr = s.toCharArray();
        for (char c : chArr) {
            if (!Character.isLetter(c)) {
                return false;
            }
        }
        return true;
    }
}
