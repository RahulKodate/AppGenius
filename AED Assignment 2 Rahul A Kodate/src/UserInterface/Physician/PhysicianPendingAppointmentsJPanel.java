/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Physician;

import Business.Doctor.Doctor;
import UserInterface.Patient.*;
import Business.Ecosystem;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PhysicianRequest;
import Business.WorkQueue.WorkRequest;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saad Ghojaria
 */
public class PhysicianPendingAppointmentsJPanel extends javax.swing.JPanel {
    
    JPanel CardLayoutJPanel;
    UserAccount account;
    Ecosystem business;

    /**
     * Creates new form PatientUpcomingAppointmentsJPanel
     */
    public PhysicianPendingAppointmentsJPanel(JPanel CardLayoutJPanel, UserAccount account, Ecosystem business) {
        initComponents();
        
        this.CardLayoutJPanel = CardLayoutJPanel;
        this.business = business;
        this.account = account;
        
        this.populateTable();
        
    }

    public void populateTable() {
        // populate all patients in patient directory
        ArrayList<WorkRequest> appointmentList = account.getWorkQueue().getWorkRequestList();
        ArrayList<WorkRequest> pendingAppointmentList = new ArrayList();
        
        for(WorkRequest w: appointmentList) {
            if(w.getStatus().equals("pending physician approval")) {
                pendingAppointmentList.add(w);
            }
        }
        
    
        int rowCount = PendingApprovalsJTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel)PendingApprovalsJTable.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        
        for(WorkRequest w: pendingAppointmentList) {
            Object row[] = new Object[5];
            
            PhysicianRequest pr = (PhysicianRequest) w;
            
            Patient p = (Patient) this.business.getUserAccountDirectory().getUserById(pr.getSender().getId()).getDetails();
            Doctor d = (Doctor) this.account.getDetails();
        
            row[0] = p.getName();
            row[1] = d.getHospital().getName();
            row[2] = pr;
            row[3] = pr.getTime();
            //row[4] = pr.getAppointmentDate();
            
            model.addRow(row);
            
        }     
            
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PendingApprovalsJPanel = new javax.swing.JPanel();
        lblPendingApprovals = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        PendingApprovalsJTable = new javax.swing.JTable();
        btnAccept = new javax.swing.JButton();
        btnDecline = new javax.swing.JButton();

        PendingApprovalsJPanel.setBackground(new java.awt.Color(204, 255, 204));

        lblPendingApprovals.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        lblPendingApprovals.setForeground(new java.awt.Color(255, 255, 255));
        lblPendingApprovals.setText("PENDING APPROVALS");

        PendingApprovalsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient", "Hospital", "Date Requested", "Time Slot"
            }
        ));
        jScrollPane4.setViewportView(PendingApprovalsJTable);

        btnAccept.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnDecline.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnDecline.setText("Decline");
        btnDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeclineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PendingApprovalsJPanelLayout = new javax.swing.GroupLayout(PendingApprovalsJPanel);
        PendingApprovalsJPanel.setLayout(PendingApprovalsJPanelLayout);
        PendingApprovalsJPanelLayout.setHorizontalGroup(
            PendingApprovalsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PendingApprovalsJPanelLayout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(lblPendingApprovals)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PendingApprovalsJPanelLayout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(PendingApprovalsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PendingApprovalsJPanelLayout.createSequentialGroup()
                        .addComponent(btnAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(408, 408, 408)
                        .addComponent(btnDecline, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );
        PendingApprovalsJPanelLayout.setVerticalGroup(
            PendingApprovalsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PendingApprovalsJPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblPendingApprovals, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PendingApprovalsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDecline)
                    .addComponent(btnAccept))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(PendingApprovalsJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PendingApprovalsJPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        
        int rowCount = PendingApprovalsJTable.getSelectedRow();
        
        if(rowCount < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        WorkRequest request = (WorkRequest) PendingApprovalsJTable.getValueAt(rowCount, 2);
        
        request.setStatus("physician accepted");
        
        JOptionPane.showMessageDialog(null, "Appointment accepted");
        
        populateTable();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeclineActionPerformed
        // TODO add your handling code here:
        
        int rowCount = PendingApprovalsJTable.getSelectedRow();
        
        if(rowCount < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        WorkRequest request = (WorkRequest) PendingApprovalsJTable.getValueAt(rowCount, 2);
        
        request.setStatus("physician declined");
        
        JOptionPane.showMessageDialog(null, "Appointment declined");
        
        populateTable();
    }//GEN-LAST:event_btnDeclineActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PendingApprovalsJPanel;
    private javax.swing.JTable PendingApprovalsJTable;
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnDecline;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblPendingApprovals;
    // End of variables declaration//GEN-END:variables
}
